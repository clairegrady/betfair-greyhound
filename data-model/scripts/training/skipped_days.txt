combined_2016_Dec_1.parquet: "Missing 'status' column"
combined_2016_Dec_10.parquet: "Missing 'status' column"
combined_2016_Dec_11.parquet: "Missing 'status' column"
combined_2016_Dec_12.parquet: "Missing 'status' column"
combined_2016_Dec_13.parquet: "Missing 'status' column"
combined_2016_Dec_14.parquet: "Missing 'status' column"
combined_2016_Dec_15.parquet: "Missing 'status' column"
combined_2016_Dec_16.parquet: "Missing 'status' column"
combined_2016_Dec_17.parquet: "Missing 'status' column"
combined_2016_Dec_18.parquet: "Missing 'status' column"
combined_2016_Dec_19.parquet: "Missing 'status' column"
combined_2016_Dec_2.parquet: "Missing 'status' column"
combined_2016_Dec_20.parquet: "Missing 'status' column"
combined_2016_Dec_21.parquet: "Missing 'status' column"
combined_2016_Dec_22.parquet: "Missing 'status' column"
combined_2016_Dec_23.parquet: "Missing 'status' column"
combined_2016_Dec_24.parquet: "Missing 'status' column"
combined_2016_Dec_26.parquet: "Missing 'status' column"
combined_2016_Dec_27.parquet: "Missing 'status' column"
combined_2016_Dec_28.parquet: "Missing 'status' column"
combined_2016_Dec_29.parquet: "Missing 'status' column"
combined_2016_Dec_3.parquet: "Missing 'status' column"
combined_2016_Dec_30.parquet: "Missing 'status' column"
combined_2016_Dec_31.parquet: "Missing 'status' column"
combined_2016_Dec_4.parquet: "Missing 'status' column"
combined_2016_Dec_5.parquet: "Missing 'status' column"
combined_2016_Dec_1.parquet: "Missing 'status' column"
combined_2016_Dec_10.parquet: "Missing 'status' column"
combined_2016_Dec_11.parquet: "Missing 'status' column"
combined_2016_Dec_12.parquet: "Missing 'status' column"
combined_2016_Dec_13.parquet: "Missing 'status' column"
combined_2016_Dec_14.parquet: "Missing 'status' column"
combined_2016_Dec_15.parquet: "Missing 'status' column"
combined_2016_Dec_16.parquet: "Missing 'status' column"
combined_2016_Dec_17.parquet: "Missing 'status' column"
combined_2016_Dec_18.parquet: "Missing 'status' column"
combined_2016_Dec_19.parquet: "Missing 'status' column"
combined_2016_Dec_2.parquet: "Missing 'status' column"
combined_2016_Dec_20.parquet: "Missing 'status' column"
combined_2016_Dec_21.parquet: "Missing 'status' column"
combined_2016_Dec_22.parquet: "Missing 'status' column"
combined_2016_Dec_23.parquet: "Missing 'status' column"
combined_2016_Dec_24.parquet: "Missing 'status' column"
combined_2016_Dec_26.parquet: "Missing 'status' column"
combined_2016_Dec_27.parquet: "Missing 'status' column"
combined_2016_Dec_28.parquet: "Missing 'status' column"
combined_2016_Dec_29.parquet: "Missing 'status' column"
combined_2016_Dec_3.parquet: "Missing 'status' column"
combined_2016_Dec_30.parquet: "Missing 'status' column"
combined_2016_Dec_31.parquet: "Missing 'status' column"
combined_2016_Dec_4.parquet: "Missing 'status' column"
combined_2016_Dec_5.parquet: "Missing 'status' column"
combined_2016_Dec_6.parquet: "Missing 'status' column"
combined_2016_Dec_7.parquet: "Missing 'status' column"
combined_2016_Dec_8.parquet: "Missing 'status' column"
combined_2016_Dec_9.parquet: "Missing 'status' column"
combined_2016_Nov_1.parquet: "Missing 'status' column"
combined_2016_Nov_10.parquet: "Missing 'status' column"
combined_2016_Nov_11.parquet: "Missing 'status' column"
combined_2016_Nov_12.parquet: "Missing 'status' column"
combined_2016_Nov_13.parquet: "Missing 'status' column"
combined_2016_Nov_14.parquet: "Missing 'status' column"
combined_2016_Nov_15.parquet: "Missing 'status' column"
combined_2016_Nov_16.parquet: "Missing 'status' column"
combined_2016_Nov_17.parquet: "Missing 'status' column"
combined_2016_Nov_18.parquet: "Missing 'status' column"
combined_2016_Nov_19.parquet: "Missing 'status' column"
combined_2016_Nov_2.parquet: "Missing 'status' column"
combined_2016_Nov_20.parquet: "Missing 'status' column"
combined_2016_Nov_21.parquet: "Missing 'status' column"
combined_2016_Nov_22.parquet: "Missing 'status' column"
combined_2016_Nov_23.parquet: "Missing 'status' column"
combined_2016_Nov_24.parquet: "Missing 'status' column"
combined_2016_Nov_25.parquet: "Missing 'status' column"
combined_2016_Nov_26.parquet: "Missing 'status' column"
combined_2016_Nov_27.parquet: "Missing 'status' column"
combined_2016_Nov_28.parquet: "Missing 'status' column"
combined_2016_Nov_29.parquet: "Missing 'status' column"
combined_2016_Nov_3.parquet: "Missing 'status' column"
combined_2016_Nov_30.parquet: "Missing 'status' column"
combined_2016_Nov_4.parquet: "Missing 'status' column"
combined_2016_Nov_5.parquet: "Missing 'status' column"
combined_2016_Nov_6.parquet: "Missing 'status' column"
combined_2016_Nov_7.parquet: "Missing 'status' column"
combined_2016_Nov_8.parquet: "Missing 'status' column"
combined_2016_Nov_9.parquet: "Missing 'status' column"
combined_2016_Oct_1.parquet: "Missing 'status' column"
combined_2016_Oct_10.parquet: "Missing 'status' column"
combined_2016_Oct_11.parquet: "Missing 'status' column"
combined_2016_Dec_1.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_10.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_11.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_12.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_13.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_14.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_15.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_16.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_17.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_18.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_19.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_2.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_20.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_21.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_22.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_23.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_24.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_26.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_27.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_28.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_29.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_3.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_30.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_31.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_4.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_5.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_6.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_7.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_8.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_9.parquet: DataFrame.dtypes for data must be int, float, bool or category. When categorical type is supplied, the experimental DMatrix parameter`enable_categorical` must be set to `True`.  Invalid columns:status_x: object, name_x: object, eventId: object, eventTypeId: object, marketTime: object, openDate: object, bettingType: object, marketType: object, status_y: object, venue: object, countryCode: object, timezone: object, eventName: object, name_y: object, suspendTime: object
combined_2016_Dec_10.parquet: '<' not supported between instances of 'float' and 'str'
combined_2016_Dec_16.parquet: '<' not supported between instances of 'str' and 'float'
combined_2016_Dec_17.parquet: '<' not supported between instances of 'str' and 'float'
combined_2016_Dec_18.parquet: '<' not supported between instances of 'float' and 'str'
combined_2016_Dec_2.parquet: '<' not supported between instances of 'float' and 'str'
combined_2016_Dec_20.parquet: '<' not supported between instances of 'str' and 'float'
combined_2016_Dec_26.parquet: '<' not supported between instances of 'str' and 'float'
combined_2016_Dec_27.parquet: '<' not supported between instances of 'str' and 'float'
combined_2016_Dec_28.parquet: '<' not supported between instances of 'float' and 'str'
combined_2016_Dec_29.parquet: '<' not supported between instances of 'str' and 'float'
combined_2016_Dec_3.parquet: '<' not supported between instances of 'str' and 'float'
combined_2016_Dec_30.parquet: '<' not supported between instances of 'float' and 'str'
combined_2016_Dec_4.parquet: '<' not supported between instances of 'float' and 'str'
combined_2017_Dec_25.parquet (train_test_split): With n_samples=0, test_size=0.2 and train_size=None, the resulting train set will be empty. Adjust any of the aforementioned parameters.
combined_2017_Dec_25.parquet (train_test_split): With n_samples=0, test_size=0.2 and train_size=None, the resulting train set will be empty. Adjust any of the aforementioned parameters.
combined_2017_Dec_25.parquet (train_test_split): With n_samples=0, test_size=0.2 and train_size=None, the resulting train set will be empty. Adjust any of the aforementioned parameters.
